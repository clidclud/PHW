# Напишите функцию print_operation_table(operation, num_rows, num_columns), 
# которая принимает в качестве аргумента функцию, вычисляющую элемент по 
# номеру строки и столбца.
# Аргументы num_rows и num_columns указывают число строк и столбцов таблицы, 
# которые должны быть распечатаны.
# Нумерация строк и столбцов идет с единицы (подумайте, почему не с нуля).
# Если строк меньше двух, выдайте текст
# ОШИБКА! Размерности таблицы должны быть больше 2!.
# Примечание: бинарной операцией называется любая операция, 
# у которой ровно два аргумента, как, например, у операции умножения.
# Пример
# На входе:
# print_operation_table(lambda x, y: x * y, 3, 3)
# На выходе:
# 1 2 3
# 2 4 6 
# 3 6 9

# def print_operation_table(operation, num_rows, num_columns):
#     if num_rows < 2 or num_columns < 2:
#         print('ОШИБКА! Размерности таблицы должны быть больше 2!')
#     else:
#         print(*[i for i in range(1, num_columns + 1)])
#         for i in range(2, num_rows + 1):
#             print(i, end=' ')
#             for j in range(2, num_columns + 1):
#                 print(operation(i,j), end=' ',)
#             print()
#
# print_operation_table(lambda x, y: x * y, 3, 3)

# Винни-Пух попросил Вас посмотреть, есть ли в его стихах ритм. 
# Поскольку разобраться в его кричалках не настолько просто, 
# насколько легко он их придумывает, Вам стоит написать программу.

# Винни-Пух считает, что ритм есть, если число слогов 
# (т.е. число гласных букв) в каждой фразе стихотворения одинаковое.
# Фраза может состоять из одного слова, если во фразе несколько слов, 
# то они разделяются дефисами.
# Фразы отделяются друг от друга пробелами.

# Стихотворение  Винни-Пух передаст вам автоматически в переменную 
# stroka в виде строки. В ответе напишите Парам пам-пам, если с ритмом 
# все в порядке и Пам парам, если с ритмом все не в порядке.
# Если фраза только одна, то ритм определить не получится и необходимо 
# вывести: Количество фраз должно быть больше одной!.

# Пример

# На входе:

# stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
# На выходе:

# Парам пам-пам

# Решение мое
#
# stroka = 'пара-ра-рам рам-пам-папам па-ра-па-дам'
# word = stroka.upper().split()
# vowels = 'АУОЫЭЯЮЁИЕ'
# rhyme = list()
# count = 0
# for i in word:
#     for j in i:
#         for k in vowels:
#             if j == k:
#                 count += 1
#     rhyme.append(count)
#     count = 0
# if len(rhyme) == 1:
#     print('Количество фраз должно быть больше одной!')
# elif all(map(lambda a: a == rhyme[0], rhyme)):
#     print('Парам пам-пам')
# else:
#     print('Пам парам')
#
# Решение GeekBrains
#
# vowels = ['а', 'е', 'ё', 'и', 'й', 'о', 'у', 'ы', 'э', 'ю', 'я']
# phrases = stroka.split()
# if len(phrases) < 2:
#  print('Количество фраз должно быть больше одной!')
# else:
#  countVowels = []
#
#  for i in phrases:
#   countVowels.append(len([x for x in i if x.lower() in vowels]))
#
#  if countVowels.count(countVowels[0]) == len(countVowels):
#   print('Парам пам-пам')
#  else:
#   print('Пам парам')

